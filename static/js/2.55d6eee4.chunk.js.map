{"version":3,"sources":["redux/transactions/transactions-operations.js","redux/transactions/transactions-selectors.js","components/dashboard/Balance/Balance.js","Icons/icons.svg","Icons/Icons.js","components/dashboard/Navigation/NavigationBtns.js","components/authorization/ModalLogout/ModalLogout.js","components/authorization/UserMenu/UserMenu.js","components/authorization/AuthBar/AuthBar.js","images/vector.svg","images/vector1.svg","components/currency/Currency.js","components/dashboard/Navigation/Navigation.module.scss","components/dashboard/Balance/Balance.module.scss","components/shared/Error/Error.js","assets/templates/categoriesSchema.js","components/statistic/Chart/Chart.js","components/shared/Dropdown/Dropdown.js","components/statistic/Table/Table.js","api/statisticsApi.js","api/index.js","components/statistic/Diagram.js"],"names":["fetchTransactions","dispatch","a","fetchTransactionRequest","axios","get","data","fetchTransactionSuccess","transactions","fetchTransactionError","message","addTransaction","transactionData","addTransactionRequest","post","addTransactionSuccess","result","addTransactionError","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","getQueryStatistics","month","year","getQueryStatisticsRequest","getQueryStatisticsSuccess","getQueryStatisticsError","getCategories","getTransactionCategoriesRequest","getTransactionCategoriesSuccess","getTransactionCategoriesError","getAllTransactions","state","allTransactions","getAddTransactions","addTransactions","getAllQueryStatistics","queryStatistics","getIsModalAddTransactionOpen","modalTransaction","getTransactionCategories","transactionCategories","getCurrentBalance","balance","Balance","useSelector","authSelectors","getBalance","className","S","wrapper","title","txt","badge","Icons","name","size","color","fill","stroke","width","height","xlinkHref","IconsSprite","Navigation","navigation_container","navigation_nav_link","to","navigation_link","activeClassName","active_link","navigation_home_icon","navigation_page_home","navigation_stat_icon","navigation_page_stat","navigation_dollar_icon","modalRoot","document","querySelector","ModalLogout","onClose","useDispatch","onLogout","useCallback","operations","logout","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","handleBackdropClick","event","currentTarget","target","createPortal","onClick","UserMenu","useState","openModal","setOpenModal","username","getUserName","onOpenModal","closeModal","type","href","AuthBar","financial","x","Number","parseFloat","toFixed","Currency","courses","setCourses","isLoading","setLoading","isDesktop","setIsDesktop","setPredicate","innerWidth","getCurrency","fetch","then","res","json","results","filtertdRes","filter","ccy","prev","console","classes","makeStyles","root","fontFamily","padding","table","backgroundImage","Tablet","backgroundPosition","backgroundRepeat","tableBody","head","headCell","row","cell","cellRadiusLeft","cellRadiusRight","vector","useStyles","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","cours","buy","sale","src","Vector","alt","module","exports","Error","errorMessage","closeButton","newestOnTop","pauseOnVisibilityChange","currentYear","Date","getFullYear","schemas","colorSchema","categoriesSchema","yearOptions","elem","String","monthOptions","Chart","statistics","datasets","backgroundColor","borderColor","borderWidth","hoverOffset","cutout","Dropdown","selected","setSelected","options","isActive","setIsActive","option","onBlur","props","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","expenseList","expense","idx","style","expenseAll","income","defaults","baseURL","fetchStatisticsAPI","token","headers","common","Authorization","Api","Diagram","initialDataStat","expenseCategory","Basic","Food","Auto","Development","Children","Home","Education","Others","curBalance","transactionsSelectors","getToken","setStatistics","monthSelected","setMonthSelected","yearSelected","setYearSelected","setError","setIsLoading","catch","finally","Object","values","stats"],"mappings":"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","file":"static/js/2.55d6eee4.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  fetchTransactionRequest,\r\n  fetchTransactionSuccess,\r\n  fetchTransactionError,\r\n  addTransactionRequest,\r\n  addTransactionSuccess,\r\n  addTransactionError,\r\n  getQueryStatisticsRequest,\r\n  getQueryStatisticsSuccess,\r\n  getQueryStatisticsError,\r\n  getTransactionCategoriesRequest,\r\n  getTransactionCategoriesSuccess,\r\n  getTransactionCategoriesError,\r\n} from './transactions-actions';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n//GET\r\nconst fetchTransactions = () => async dispatch => {\r\n  dispatch(fetchTransactionRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/transactions');\r\n\r\n    dispatch(fetchTransactionSuccess(data.data.transactions));\r\n  } catch (error) {\r\n    dispatch(fetchTransactionError(error.message));\r\n  }\r\n};\r\n\r\n//POST\r\nconst addTransaction = transactionData => async dispatch => {\r\n  dispatch(addTransactionRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/transactions', transactionData);\r\n    // console.log('data', data.data.result);\r\n    dispatch(addTransactionSuccess(data.data.result));\r\n  } catch (error) {\r\n    dispatch(addTransactionError(error.message));\r\n    toast.error(' Недостаточно средств на счету', {\r\n      position: 'top-right',\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: 'colored',\r\n    });\r\n  }\r\n};\r\n\r\n//GET\r\nconst getQueryStatistics =\r\n  ({ month, year }) =>\r\n  async dispatch => {\r\n    dispatch(getQueryStatisticsRequest());\r\n\r\n    try {\r\n      const { data } = await axios.get(\r\n        `/transactions/statistics?month=${month}&year=${year}`,\r\n      );\r\n\r\n      dispatch(getQueryStatisticsSuccess(data));\r\n    } catch (error) {\r\n      dispatch(getQueryStatisticsError(error));\r\n    }\r\n  };\r\n\r\n// getCategories\r\nconst getCategories = () => async dispatch => {\r\n  dispatch(getTransactionCategoriesRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/transactions/categories');\r\n    dispatch(getTransactionCategoriesSuccess(data.data));\r\n  } catch (error) {\r\n    dispatch(getTransactionCategoriesError(error.message));\r\n  }\r\n};\r\n\r\nexport { fetchTransactions, addTransaction, getQueryStatistics, getCategories };\r\n","const getAllTransactions = state => state.transactions.allTransactions;\r\nconst getAddTransactions = state => state.transactions.addTransactions;\r\nconst getAllQueryStatistics = state => state.transactions.queryStatistics;\r\nconst getIsModalAddTransactionOpen = state =>\r\n  state.transactions.modalTransaction;\r\nconst getTransactionCategories = state =>\r\n  state.transactions.transactionCategories;\r\nconst getCurrentBalance = state =>\r\n  state.transactions.allTransactions[0].balance;\r\n\r\nexport {\r\n  getAllTransactions,\r\n  getAddTransactions,\r\n  getAllQueryStatistics,\r\n  getIsModalAddTransactionOpen,\r\n  getTransactionCategories,\r\n  getCurrentBalance,\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { authSelectors } from '../../../redux/auth';\r\nimport { transactionsSelectors } from '../../../redux/transactions';\r\nimport S from './Balance.module.scss';\r\n\r\nconst Balance = () => {\r\n  let balance = useSelector(authSelectors.getBalance);\r\n  // const curBalance = useSelector(transactionsSelectors.getCurrentBalance);\r\n  // console.log('curBal', curBalance);\r\n\r\n  // balance = curBalance ? curBalance : balance; //if in transactions 'balance' missing - take it from user Obj\r\n\r\n  return (\r\n    <div className={S.wrapper}>\r\n      <h2 className={S.title}>Ваш баланс</h2>\r\n      <p className={S.txt}>\r\n        <span className={S.badge}>₴</span>\r\n        {balance}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nexport default Balance;","export default __webpack_public_path__ + \"static/media/icons.317bdcaa.svg\";","import IconsSprite from './icons.svg';\r\n\r\nconst Icons = ({ name, size, className, color }) => {\r\n  return (\r\n    <svg\r\n      className={`icon icon-${name} ${className}`}\r\n      fill={color}\r\n      stroke={color}\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <use xlinkHref={`${IconsSprite}#icon-${name}`} />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Icons;\r\n","import { NavLink } from 'react-router-dom';\r\nimport Icons from '../../../Icons';\r\nimport S from './Navigation.module.scss';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <div className={S.navigation_container}>\r\n      <nav className={S.navigation_nav_link}>\r\n        <NavLink to=\"/fin-project-front/home\" className={S.navigation_link} activeClassName={S.active_link}>\r\n          <Icons name=\"home\" className={S.navigation_home_icon} />\r\n          <p className={S.navigation_page_home}>Главная</p>\r\n        </NavLink>\r\n\r\n        <NavLink to=\"/fin-project-front/statistics\" className={S.navigation_link} activeClassName={S.active_link}>\r\n          <Icons name=\"statistic\" className={S.navigation_stat_icon} />\r\n          <p className={S.navigation_page_stat}>Статистика</p>\r\n        </NavLink>\r\n\r\n        <NavLink to=\"/fin-project-front/currency\" className={S.navigation_link}>\r\n          <Icons name=\"dollar\" className={S.navigation_dollar_icon} />\r\n        </NavLink>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { useDispatch } from 'react-redux'\r\nimport operations from '../../../redux/auth/auth-operations'\r\nimport './ModalLogout.scss';\r\nconst modalRoot = document.querySelector('#modal-root');\r\nexport default function ModalLogout({ onClose }) {\r\n    const dispatch = useDispatch()\r\n    const onLogout = useCallback(() => {\r\n        dispatch(operations.logout());\r\n    }, [dispatch]);\r\n    useEffect(() => {\r\n        const handleKeyDown = e => {\r\n            if (e.code === 'Escape') {\r\n                onClose();\r\n            }\r\n        };\r\n        window.addEventListener('keydown', handleKeyDown);\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, [onClose]);\r\n    const handleBackdropClick = useCallback(\r\n        event => {\r\n            if (event.currentTarget === event.target) {\r\n                onClose();\r\n            }\r\n        },\r\n        [onClose],\r\n    );\r\n\r\n    return createPortal(\r\n        <div className=\"modal-backdrop\" onClick={handleBackdropClick}>\r\n            <div className=\"modal-content\" onClose={onClose}>\r\n                <span className=\"logout-modal-text\">Вы действительно хотите выйти?</span>\r\n                <div className=\"modal-buttons\">\r\n                    <button className=\"logout-modalBtn\" onClick={onLogout}>Выйти</button>\r\n                    <button className=\"close-modalBtn\" onClick={handleBackdropClick}>Отмена</button>\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        modalRoot,\r\n    );\r\n}","import { useCallback, useEffect, useState } from 'react'\r\nimport './userMenu.scss'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { authSelectors, authOperations } from '../../../redux/auth'\r\nimport ModalLogout from '../ModalLogout/ModalLogout'\r\n\r\nexport default function UserMenu() {\r\n    const [openModal, setOpenModal] = useState(false)\r\n\r\n    const username = useSelector(authSelectors.getUserName);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const onOpenModal = useCallback(() => {\r\n        setOpenModal(true)\r\n    });\r\n    const closeModal = useCallback(() => {\r\n        setOpenModal(false)\r\n    });\r\n\r\n    return (\r\n        <div className=\"user-menu\">\r\n            <span className=\"user-name\">{username}</span>\r\n            <button className=\"logout-button\" type=\"button\" onClick={onOpenModal}>\r\n                <svg className=\"logout-icon\">\r\n                    <use href=\"../../../../images/icons/logout-icon.svg\"></use>\r\n                </svg>\r\n                <span className=\"exit-button-text\">Выйти</span>\r\n            </button>\r\n            {openModal ? <ModalLogout onClose={closeModal} /> : null}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './authBar.scss'\r\nimport UserMenu from '../UserMenu/UserMenu'\r\n\r\nexport default function AuthBar() {\r\n    return (\r\n        <div className=\"auth-bar\">\r\n            <Link to=\"/fin-project-front/home\" className=\"logo bar-logo\"></Link>\r\n            <UserMenu />\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/vector.2c3a3c54.svg\";","export default __webpack_public_path__ + \"static/media/vector1.94d94956.svg\";"," import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport { useState, useEffect } from 'react';\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Vector from '../../images/vector.svg';\r\nimport Tablet from '../../images/vector1.svg';\r\nimport \"./Currency.scss\";\r\nconst fetchCurrency = () => {\r\n    return fetch(`https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5`,\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // console.log(data);\r\n        return data;\r\n      });\r\n};\r\n\r\nconst financial = (x) => Number.parseFloat(x).toFixed(2);\r\n\r\nconst Currency = () => {\r\n  const [courses, setCourses] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [isDesktop, setIsDesktop] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    setPredicate();\r\n    setIsDesktop(window.innerWidth > 1279);\r\n    getCurrency();\r\n    \r\n  }, []);\r\n\r\n  const setPredicate = () => {\r\n    \r\n    window.addEventListener(\"resize\", () => {\r\n      setIsDesktop(window.innerWidth > 1279);\r\n      \r\n      return;\r\n    })\r\n  };\r\n  \r\n\r\n  const getCurrency = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const results = await fetchCurrency();\r\n      const filtertdRes = results.filter(result => result.ccy !== \"BTC\");\r\n      // console.log(filtertdRes);\r\n      setCourses(prev => [...prev, ...filtertdRes]);\r\n    } catch (error) {\r\n      console.error('Smth wrong with search fetch', error);\r\n      \r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n   \r\n    root: {\r\n      fontFamily: 'Circe',\r\n      \"border-top-left-radius\": 20,\r\n      \"border-top-right-radius\": 20,\r\n      padding: 0,\r\n      \"border-bottom-left-radius\": 20,\r\n      \"border-bottom-right-radius\": 20,\r\n      // \"margin-top\":20,\r\n    },\r\n    table: {\r\n      \"@media (min-width: 320px) and (max-width:767px )\": {\r\n       width: 280 \r\n      },\r\n      \"@media (min-width: 768px) and (max-width:1279px )\": {\r\n       width: 334 \r\n      },\r\n      \"@media (min-width: 1280)\": {\r\n        width: 348\r\n      },\r\n       \"@media (min-width: 320px) and (max-width:1279px )\": {\r\n       \r\n     \r\n      backgroundImage: `url(${Tablet})`,\r\n      backgroundPosition: 'bottom',     \r\n         backgroundRepeat: 'no-repeat',\r\n      \"border-bottom-left-radius\": 20,\r\n      \"border-bottom-right-radius\": 20 \r\n       },\r\n      \"text-align\": \"center\",\r\n      \r\n      \r\n      \"border\": \"none\",\r\n      \"background\": \"#4a56e2\",\r\n     \r\n      \"border-top-left-radius\": 20,\r\n      \"border-top-right-radius\": 20,\r\n      fontFamily: 'Circe'\r\n    },\r\n    tableBody: {\r\n      \r\n      \"@media (min-width: 320px) and (max-width:1279px )\": {\r\n        \r\n      },\r\n      \r\n    },\r\n    head: {\r\n     \"@media (min-width: 320px) and (max-width:1279px )\": {\r\n       height:50,\r\n      },\r\n     \"@media (min-width: 1280)\": {\r\n      height: 60\r\n      },\r\n\r\n      \"text-align\": \"center\",\r\n      \"border-bottom\": \"none\",\r\n      \"color\": \"#ffffff\",\r\n      \"font-size\": \"18px\",\r\n      fontFamily: 'Circe',\r\n      \"line-height\": \"27px\",\r\n\r\n    },\r\n    headCell: {\r\n     \"font-weight\": \"bold\",\r\n      \"@media (min-width: 1280)\": {\r\n       padding: 0,\r\n      },\r\n      \"@media (min-width: 320px) and (max-width:1279px )\": {\r\n        padding:0,\r\n      },\r\n     \r\n      \"text-align\":\"center\",\r\n      \"color\": \"#ffffff\",\r\n      \"font-size\": \"18px\",\r\n      fontFamily: 'Circe',\r\n      \"border-bottom\": \"none\",\r\n      \"line-height\": \"27px\",\r\n      \"background\": \"#6e78e8\"\r\n    },\r\n    row: {\r\n        \"@media (min-width: 1280)\": {\r\n        height: 51\r\n      }\r\n    },\r\n    cell: {\r\n      padding:13,\r\n      \"text-align\": \"center\",\r\n      \"border\": \"none\",\r\n      \"@media (min-width: 320px) and (max-width:1279px )\": {\r\n        height: 41,\r\n        padding: 0,\r\n      },\r\n     \"@media (min-width: 1280)\": {\r\n       height: 51,\r\n      },\r\n      \r\n      fontFamily: 'Circe',\r\n      \"color\": \"#ffffff\",\r\n      \"font-weight\": 400,\r\n      \"font-size\": \"16px\",\r\n      \"line-height\": \"24px\",\r\n    },\r\n    cellRadiusLeft:{\r\n      \"border-top-left-radius\": 20,\r\n    },\r\n    cellRadiusRight:{\r\n      \"border-top-right-radius\": 20,\r\n    },\r\n    vector: {\r\n      \r\n      \"background\": \"#4a56e2\",\r\n      \"border-bottom-left-radius\": 20,\r\n      \"border-bottom-right-radius\": 20\r\n      \r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead className={classes.head}>\r\n          <TableRow>\r\n              <TableCell className={classes.headCell + ' ' + classes.cellRadiusLeft}>Валюта</TableCell>\r\n            <TableCell className={classes.headCell}>Покупка</TableCell>\r\n            <TableCell className={classes.headCell + ' ' + classes.cellRadiusRight}>Продажа</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody className={classes.tableBody}>\r\n          {courses.map((cours) => (\r\n            <TableRow key={cours.ccy} className={classes.row}>\r\n              <TableCell className={classes.cell}>{cours.ccy}</TableCell>\r\n              <TableCell className={classes.cell}>{financial(cours.buy)}</TableCell>\r\n              <TableCell className={classes.cell}>{financial(cours.sale)}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          \r\n        </TableBody>\r\n        \r\n      </Table>\r\n      </Paper>\r\n      {isLoading && <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />}\r\n      {isDesktop &&\r\n        <div> <img src={Vector} className={classes.vector} alt=\"vector\" /></div>}\r\n  \r\n    </div>\r\n  );\r\n   \r\n};\r\n\r\n \r\n\r\nexport default Currency;\r\n  \r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation_link\":\"Navigation_navigation_link__2AaYf\",\"navigation_container\":\"Navigation_navigation_container__2l-nP\",\"navigation_nav_link\":\"Navigation_navigation_nav_link__1WBZo\",\"navigation_home_icon\":\"Navigation_navigation_home_icon__1AE_A\",\"navigation_stat_icon\":\"Navigation_navigation_stat_icon__1dqXB\",\"navigation_dollar_icon\":\"Navigation_navigation_dollar_icon__2Zse7\",\"navigation_page_home\":\"Navigation_navigation_page_home__2rySn\",\"navigation_page_stat\":\"Navigation_navigation_page_stat__2iwgI\",\"active_link\":\"Navigation_active_link__nCjyh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Balance_wrapper__uQH9k\",\"title\":\"Balance_title__1K3JV\",\"txt\":\"Balance_txt__1IbAe\",\"badge\":\"Balance_badge__3divu\"};","import { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Error({ errorMessage }) {\r\n  toast.error(`${errorMessage}`);\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer\r\n        draggable={false}\r\n        position={'top-right'}\r\n        closeButton\r\n        closeOnClick\r\n        autoClose={8000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        pauseOnVisibilityChange\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n}","const colorSchema = [\r\n  '#FED057',\r\n  '#FFD8D0',\r\n  '#FD9498',\r\n  '#C5BAFF',\r\n  '#6E78E8',\r\n  '#4A56E2',\r\n  '#81E1FF',\r\n  '#24CCA7',\r\n  '#00AD84',\r\n];\r\n\r\nconst categoriesSchema = [\r\n  'Основные расходы',\r\n  'Продукты',\r\n  'Машина',\r\n  'Забота о себе',\r\n  'Забота о детях',\r\n  'Товары для дома',\r\n  'Образование',\r\n  'Досуг',\r\n  'Другие расходы',\r\n];\r\n\r\nconst monthOptions = [\r\n  '01',\r\n  '02',\r\n  '03',\r\n  '04',\r\n  '05',\r\n  '06',\r\n  '07',\r\n  '08',\r\n  '09',\r\n  '10',\r\n  '11',\r\n  '12',\r\n];\r\n\r\nconst currentYear = new Date().getFullYear();\r\nconst years = [0, -1, -2, -3];\r\nconst yearOptions = years.map(elem => String(elem + currentYear));\r\n\r\nconst schemas = { colorSchema, categoriesSchema, yearOptions, monthOptions };\r\n\r\nexport default schemas;\r\n","import React from 'react';\r\n\r\nimport './Chart.scss';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport schemas from '../../../assets/templates/categoriesSchema';\r\n\r\nexport default function Chart({ statistics, balance }) {\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: statistics,\r\n        backgroundColor: schemas.colorSchema,\r\n        borderColor: schemas.colorSchema,\r\n        borderWidth: 1,\r\n        hoverOffset: 4,\r\n        cutout: 99,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div className=\"chart\">\r\n      <Doughnut className=\"chart__contents\" data={data} />\r\n      <span className=\"chart__ballance\">&#8372; {balance}</span>\r\n    </div>\r\n  );\r\n}\r\n// export default function Chart() {\r\n//   return (\r\n//     <div>\r\n//        <div className=\"chart\">\r\n//         <Doughnut\r\n//           className=\"chart__contents\"\r\n//           data={{\r\n//             datasets: [\r\n//               {\r\n//                 data: [20, 50, 100, 250, 500, 25, 36, 48, 1000],\r\n//                 backgroundColor: [\r\n//                   '#FED057',\r\n//                   '#FFD8D0',\r\n//                   '#FD9498',\r\n//                   '#C5BAFF',\r\n//                   '#6E78E8',\r\n//                   '#4A56E2',\r\n//                   '#81E1FF',\r\n//                   '#24CCA7',\r\n//                   '#00AD84',\r\n//                 ],\r\n//                 borderColor: [\r\n//                   '#FED057',\r\n//                   '#FFD8D0',\r\n//                   '#FD9498',\r\n//                   '#C5BAFF',\r\n//                   '#6E78E8',\r\n//                   '#4A56E2',\r\n//                   '#81E1FF',\r\n//                   '#24CCA7',\r\n//                   '#00AD84',\r\n//                 ],\r\n//                 borderWidth: 1,\r\n//                 hoverOffset: 4,\r\n//                 cutout: 99,\r\n//               },\r\n//             ],\r\n//           }}\r\n//         />\r\n//         <span className=\"chart__ballance\">&#8372; {24000}</span>\r\n//        </div>\r\n//      </div>\r\n//   );\r\n// }","import { useState } from 'react';\r\nimport './Dropdown.scss';\r\nexport default function Dropdown({ selected, setSelected, options }) {\r\n  const [isActive, setIsActive] = useState(false);\r\n  //   const handleClickOutside = e => {\r\n  //     console.log('outside click isActive', isActive, '  e:', e.target.className);\r\n  //     if (\r\n  //       e.target.className === 'dropdown-item' &&\r\n  //       e.target.className === 'dropdown-btn'\r\n  //     ) {\r\n  //       return;\r\n  //     }\r\n  //     setIsActive(false);  // \"../../../images/icons/arrow-down.svg\"\r\n  //   };\r\n\r\n  const handleClick = () => {\r\n    //document.addEventListener('click', handleClickOutside);\r\n    //console.log('listener outside added');\r\n    setIsActive(!isActive);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <div\r\n        className=\"dropdown-btn\"\r\n        onClick={e => {\r\n          handleClick();\r\n          //console.log('btn click isActive', isActive);\r\n        }}\r\n      >\r\n        {selected}\r\n        <span className=\"arrow-down\"></span>\r\n      </div>\r\n      {isActive && (\r\n        <div className=\"dropdown-content\">\r\n          {options.map(option => (\r\n            <div\r\n              key={option}\r\n              onClick={e => {\r\n                setSelected(option);\r\n                setIsActive(false);\r\n                //console.log('option click isActive', isActive);\r\n              }}\r\n              onBlur={e => {\r\n                setIsActive(false);\r\n                //console.log('onBlur', isActive);\r\n              }}\r\n              className=\"dropdown-item\"\r\n            >\r\n              {option}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}","import '../../shared/Dropdown';\r\nimport Dropdown from '../../shared/Dropdown';\r\nimport schemas from '../../../assets/templates/categoriesSchema';\r\nimport './Table.scss';\r\n\r\nexport default function Table(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"table\">\r\n        <div className=\"table_select\">\r\n          <div className=\"component_select_m\">\r\n            <Dropdown\r\n              selected={props.selectedMonth}\r\n              setSelected={props.setSelectedMonth}\r\n              options={schemas.monthOptions}\r\n            />\r\n          </div>\r\n          <div className=\"component_select_y\">\r\n            <Dropdown\r\n              selected={props.selectedYear}\r\n              setSelected={props.setSelectedYear}\r\n              options={schemas.yearOptions}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"statistics__menu\">\r\n          <span className=\"statistics__list-title\">Категория</span>\r\n          <span className=\"statistics__list-title\">Сумма</span>\r\n        </div>\r\n\r\n        <ul className=\"statistics list\">\r\n          {props.statistics.expenseList.map((expense, idx) => {\r\n            if (expense === 0) {\r\n              return; // if 0 uah -- row is not rendering\r\n            }\r\n            return (\r\n              <li key={idx} className=\"statistics__list-item\">\r\n                <span\r\n                  className=\"statistics__color\"\r\n                  style={{ backgroundColor: schemas.colorSchema[idx] }}\r\n                >\r\n                  {' '}\r\n                </span>\r\n                <div className=\"statistics__category_wrap\">\r\n                  <span className=\"statistics__category\">\r\n                    {schemas.categoriesSchema[idx]}\r\n                  </span>\r\n                </div>\r\n                <span className=\"statistics__costs\">{expense}</span>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n\r\n        <ul className=\"outcome list\">\r\n          <li className=\"outcome__item\">\r\n            <span className=\"outcome__type\">Расходы:</span>\r\n            <span className=\"outcome__total outcome__total--expenses\">\r\n              {props.statistics.expenseAll}\r\n            </span>\r\n          </li>\r\n          <li className=\"outcome__item\">\r\n            <span className=\"outcome__type\">Доходы:</span>\r\n            <span className=\"outcome__total  outcome__total--income\">\r\n              {props.statistics.income}\r\n            </span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\naxios.defaults.baseURL = 'https://fin-project-group4.herokuapp.com/api/';\r\nconst fetchStatisticsAPI = async (month, year, token) => {\r\n  try {\r\n    axios.defaults.headers.common.Authorization = `${token}`; //Bearer  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    const { data } = await axios.get(\r\n      `transactions/statistics?month=${Number(month)}&year=${year}`,\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(`${error.message}`);\r\n  }\r\n};\r\n\r\nexport { fetchStatisticsAPI };","import { fetchStatisticsAPI } from './statisticsApi';\r\n\r\nconst Api = { fetchStatisticsAPI };\r\n\r\nexport default Api;","import { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { authSelectors } from '../../redux/auth';\r\nimport { transactionsSelectors } from '../../redux/transactions';\r\n\r\nimport Error from '../shared/Error';\r\nimport Chart from './Chart';\r\nimport Table from './Table';\r\nimport './Diagram.scss';\r\nimport Api from '../../api';\r\nimport React from 'react';\r\n\r\nexport default function Diagram() {\r\n  const initialDataStat = {\r\n    income: '-',\r\n    expenseAll: '-',\r\n    expenseCategory: {\r\n      Basic: '-',\r\n      Food: '-',\r\n      Auto: '-',\r\n      Development: '-',\r\n      Children: '-',\r\n      Home: '-',\r\n      Education: '-',\r\n      Others: '-',\r\n    },\r\n  };\r\n\r\n  let balance = useSelector(authSelectors.getBalance);\r\n  const curBalance = useSelector(transactionsSelectors.getCurrentBalance);\r\n  balance = curBalance ? curBalance : balance; //if in transactions 'balance' missing - take it from user Obj\r\n\r\n  const token = useSelector(authSelectors.getToken);\r\n\r\n  const [statistics, setStatistics] = useState(initialDataStat); //initialDataStat\r\n  const [monthSelected, setMonthSelected] = useState('Месяц');\r\n  const [yearSelected, setYearSelected] = useState('Год');\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(null);\r\n\r\n  useEffect(() => {\r\n    //console.log('useEffect start', Date.now());\r\n    let month = monthSelected;\r\n    let year = yearSelected;\r\n    month = month === 'Месяц' ? 11 : monthSelected;\r\n    year = year === 'Год' ? 2021 : yearSelected;\r\n\r\n    setIsLoading(true);\r\n    Api.fetchStatisticsAPI(month, year, token)\r\n      .then(res => {\r\n        if (res?.data) {\r\n          setStatistics(res?.data);\r\n        } else {\r\n          throw new Error(`Ошибка при получении данных: ${res} !`);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setError(error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, [monthSelected, yearSelected, token]);\r\n\r\n  const expenseList = Object.values(statistics?.expenseCategory);\r\n  const income = statistics?.income;\r\n  const expenseAll = statistics?.expenseAll;\r\n  const stats = { expenseList, expenseAll, income };\r\n\r\n  if (isLoading === true) {\r\n    //error && console.log('isLoading before Toastify:', Date.now(), ':', error);\r\n    const expenseList = Object.values(initialDataStat.expenseCategory);\r\n    const income = initialDataStat.income;\r\n    const expenseAll = initialDataStat.expenseAll;\r\n    const stats = { expenseList, expenseAll, income };\r\n\r\n    return (\r\n      <section className=\"diagram\">\r\n        <h1 className=\"diagram__title\">Статистика</h1>\r\n        <div className=\"diagram__data\">\r\n          {stats && <Chart statistics={stats.expenseList} balance={balance} />}\r\n\r\n          <Table\r\n            selectedMonth={monthSelected}\r\n            setSelectedMonth={setMonthSelected}\r\n            selectedYear={yearSelected}\r\n            setSelectedYear={setYearSelected}\r\n            statistics={stats}\r\n          />\r\n        </div>\r\n      </section>\r\n    );\r\n  } else {\r\n    //console.log('before return data Toastify:', Date.now(), ':', error);\r\n    return (\r\n      <section className=\"diagram\">\r\n        <h1 className=\"diagram__title\">Статистика</h1>\r\n\r\n        <div className=\"diagram__data\">\r\n          {stats && <Chart statistics={stats.expenseList} balance={balance} />}\r\n\r\n          {error && <Error errorMessage={error.message} />}\r\n\r\n          <Table\r\n            selectedMonth={monthSelected}\r\n            setSelectedMonth={setMonthSelected}\r\n            selectedYear={yearSelected}\r\n            setSelectedYear={setYearSelected}\r\n            statistics={stats}\r\n          />\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}"],"sourceRoot":""}